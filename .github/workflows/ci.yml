name: CI

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.config.kind }} ${{ matrix.config.os }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - os: ubuntu-16.04
            kind: test_release
          - os: windows-2019
            kind: test_release
          - os: macOS-latest
            kind: test_release

    outputs:
      LINUX_ZIP_CHECKSUM: ${{steps.linux_pre_release.outputs.ZIP_CHECKSUM}}
      MAC_ZIP_CHECKSUM: ${{steps.mac_pre_release.outputs.ZIP_CHECKSUM}}
      WINDOWS_ZIP_CHECKSUM: ${{steps.windows_pre_release.outputs.ZIP_CHECKSUM}}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      # CACHE SETUP
      - name: Cache cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ matrix.config.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      # BUILD
      - name: Build release
        if: matrix.config.kind == 'test_release'
        run: |
          cargo build --release --verbose

      # Release
      - name: Pre-release (Linux)
        id: linux_pre_release
        if: startsWith(matrix.config.os, 'ubuntu') && matrix.config.kind == 'test_release' && startsWith(github.ref, 'refs/tags/')
        run: |
          cd target/release
          curl -L https://github.com/mvdan/sh/releases/download/v${{ steps.get_tag_version.outputs.TAG_VERSION }}/shfmt_v${{ steps.get_tag_version.outputs.TAG_VERSION }}_linux_amd64 -o shfmt
          chmod 755 shfmt
          zip -r dprint-plugin-shfmt-x86_64-unknown-linux-gnu.zip dprint-plugin-shfmt shfmt
          echo "::set-output name=ZIP_CHECKSUM::$(shasum -a 256 dprint-plugin-shfmt-x86_64-unknown-linux-gnu.zip | awk '{print $1}')"
      - name: Pre-release (Mac)
        id: mac_pre_release
        if: startsWith(matrix.config.os, 'macOS') && matrix.config.kind == 'test_release' && startsWith(github.ref, 'refs/tags/')
        run: |
          cd target/release
          curl -L https://github.com/mvdan/sh/releases/download/v${{ steps.get_tag_version.outputs.TAG_VERSION }}/shfmt_v${{ steps.get_tag_version.outputs.TAG_VERSION }}_linux_amd64 -o shfmt
          chmod 755 shfmt
          zip -r dprint-plugin-shfmt-x86_64-apple-darwin.zip dprint-plugin-shfmt shfmt
          echo "::set-output name=ZIP_CHECKSUM::$(shasum -a 256 dprint-plugin-shfmt-x86_64-apple-darwin.zip | awk '{print $1}')"
      - name: Pre-release (Windows)
        id: windows_pre_release
        if: startsWith(matrix.config.os, 'windows') && matrix.config.kind == 'test_release' && startsWith(github.ref, 'refs/tags/')
        run: |
          cd target/release
          curl -L https://github.com/mvdan/sh/releases/download/v${{ steps.get_tag_version.outputs.TAG_VERSION }}/shfmt_v${{ steps.get_tag_version.outputs.TAG_VERSION }}_linux_amd64 -o shfmt.exe
          Compress-Archive -CompressionLevel Optimal -Force -Path dprint-plugin-shfmt.exe,shfmt.exe -DestinationPath dprint-plugin-shfmt-x86_64-pc-windows-msvc.zip
          echo "::set-output name=ZIP_CHECKSUM::$(shasum -a 256 dprint-plugin-shfmt-x86_64-pc-windows-msvc.zip | awk '{print $1}')"

      # UPLOAD ARTIFACTS
      - name: Upload Artifacts (Linux)
        uses: actions/upload-artifact@v2
        if: startsWith(matrix.config.os, 'ubuntu') && matrix.config.kind == 'test_release' && startsWith(github.ref, 'refs/tags/')
        with:
          name: linux-artifacts
          path: target/release/dprint-plugin-shfmt-x86_64-unknown-linux-gnu.zip
      - name: Upload Artifacts (Mac)
        uses: actions/upload-artifact@v2
        if: startsWith(matrix.config.os, 'macOS') && matrix.config.kind == 'test_release' && startsWith(github.ref, 'refs/tags/')
        with:
          name: mac-artifacts
          path: target/release/dprint-plugin-shfmt-x86_64-apple-darwin.zip
      - name: Upload Artifacts (Windows)
        uses: actions/upload-artifact@v2
        if: startsWith(matrix.config.os, 'windows') && matrix.config.kind == 'test_release' && startsWith(github.ref, 'refs/tags/')
        with:
          name: windows-artifacts
          path: target/release/dprint-plugin-shfmt-x86_64-pc-windows-msvc.zip

  draft_release:
    name: draft_release
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download artifacts
        uses: actions/download-artifact@v2

      - name: Move downloaded artifacts
        run: |
          mv linux-artifacts/dprint-plugin-shfmt-x86_64-unknown-linux-gnu.zip .
          mv mac-artifacts/dprint-plugin-shfmt-x86_64-apple-darwin.zip .
          mv windows-artifacts/dprint-plugin-shfmt-x86_64-pc-windows-msvc.zip .

      - name: Output checksums
        run: |
          echo "Linux zip: ${{needs.build.outputs.LINUX_ZIP_CHECKSUM}}"
          echo "Mac zip: ${{needs.build.outputs.MAC_ZIP_CHECKSUM}}"
          echo "Windows zip: ${{needs.build.outputs.WINDOWS_ZIP_CHECKSUM}}"

      - name: Create plugin file
        run: node scripts/createPluginFile.mjs

      - name: Get tag version
        id: get_tag_version
        run: echo ::set-output name=TAG_VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Get plugin file checksum
        id: get_plugin_file_checksum
        run: echo "::set-output name=CHECKSUM::$(shasum -a 256 shfmt.exe-plugin | awk '{print $1}')"

      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            dprint-plugin-shfmt-x86_64-apple-darwin.zip
            dprint-plugin-shfmt-x86_64-unknown-linux-gnu.zip
            dprint-plugin-shfmt-x86_64-pc-windows-msvc.zip
            shfmt.exe-plugin
          body: |
            ## Install

            [Install](https://dprint.dev/install/) and [setup](https://dprint.dev/setup/) dprint.

            Then in your project's *dprint.json*:

            1. Specify the plugin url and checksum in the `"plugins"` array.
            2. Ensure `.sh`, `.bat` file extensions are matched in an "includes" pattern.
            3. Add a `"shfmt"` configuration property if desired.
               ```jsonc
               {
                 // ...etc...
                 "includes": [
                   "**/*.{sh,bat}"
                 ],
                 "plugins": [
                   "https://github.com/TiceCosmos/dprint-plugin-shfmt/releases/download/${{ steps.get_tag_version.outputs.TAG_VERSION }}/shfmt.exe-plugin@${{ steps.get_plugin_file_checksum.outputs.CHECKSUM }}"
                 ],
                 "shfmt": {
                   // shfmt config goes here
                 },
               }
               ```
          draft: true
